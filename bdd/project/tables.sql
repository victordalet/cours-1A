CREATE TABLE MEMBRE (
    ID   INTEGER PRIMARY KEY,
    NOM VARCHAR(50),
    SEXE VARCHAR(1),
    DATE_NAISSANCE DATE,
    ADRESSE VARCHAR(200),
    EMAIL VARCHAR(200),
    PP VARCHAR(200),
    DATE_DERNIERE_CONNEXION DATE
);

CREATE TABLE MESSAGE(
    ID INTEGER PRIMARY KEY,
    CONTENT VARCHAR(220),
    DATE_SEND DATE,
    TYPE INTEGER
);

CREATE TABLE CONVERSATION(
    ID INTEGER PRIMARY KEY ,
    MEMBRE1 INTEGER REFERENCES MEMBRE(id),
    MEMBRE2 INTEGER REFERENCES MEMBRE(id),
    MESSAGE INTEGER REFERENCES MESSAGE(id)
);

CREATE TABLE DEPARTEMENT(
    NUMERO INTEGER PRIMARY KEY ,
    NOM VARCHAR(100)
);

CREATE TABLE VILLE(
    ID INTEGER PRIMARY KEY ,
    NOM VARCHAR(100),
    DEPARTEMENT INTEGER REFERENCES DEPARTEMENT(NUMERO),
    CODE_POSTALE INTEGER
);

ALTER TABLE MEMBRE ADD VILLE_NAISSANCE INTEGER REFERENCES VILLE(ID);
ALTER TABLE MEMBRE ADD VILLE_RESIDENCE INTEGER REFERENCES VILLE(ID);

CREATE TABLE EVENEMENT(
    ID INTEGER PRIMARY KEY ,
    ADRESSE VARCHAR(200),
    DATE_DEBUT DATE,
    HEURE_DEBUT INTEGER,
    DATE_FIN DATE,
    HEURE_FIN INTEGER,
    NB_MAX_PERSONNE INTEGER,
    IMAGE VARCHAR(200)
);

CREATE TABLE ADMINISTRATEUR_EVENEMENT(
    ID INTEGER PRIMARY KEY ,
    EVENEMENT INTEGER REFERENCES EVENEMENT(ID),
    MEMBRE INTEGER REFERENCES MEMBRE(ID)
);

CREATE TABLE PARTICIPANT(
    ID INTEGER PRIMARY KEY ,
    EVENEMENT INTEGER REFERENCES EVENEMENT(ID),
    MEMBRE INTEGER REFERENCES MEMBRE(ID),
    STATUT INTEGER
);

CREATE TABLE GROUPE(
    ID INTEGER PRIMARY KEY,
    EVENEMENT INTEGER REFERENCES EVENEMENT(ID)
);

ALTER TABLE PARTICIPANT ADD GROUPE INTEGER REFERENCES GROUPE(ID);

CREATE TABLE BANNIS(
    ID INTEGER PRIMARY KEY ,
    email VARCHAR(200)
);

CREATE TABLE PAGE(
    ID INTEGER PRIMARY KEY ,
    ILLUSTRATION VARCHAR(200),
    ADMINISTRATEUR INTEGER REFERENCES MEMBRE(ID)
);

CREATE TABLE MODERATION_PAGE(
    ID INTEGER PRIMARY KEY ,
    PAGE INTEGER REFERENCES PAGE(ID),
    MEMBRE INTEGER REFERENCES MEMBRE(ID)
);

CREATE TABLE LIKE_PAGE (
    ID INTEGER PRIMARY KEY ,
    PAGE INTEGER REFERENCES PAGE(ID),
    MEMBRE INTEGER REFERENCES PAGE(ID)
);

CREATE TABLE MESSAGE_PAGE(
    ID INTEGER PRIMARY KEY ,
    CONTENU VARCHAR(220),
    IMAGE VARCHAR(220),
    DATE_PUBLICATION DATE,
    AUTEUR INTEGER REFERENCES MEMBRE(ID),
    PAGE INTEGER REFERENCES PAGE(ID)
);

CREATE TABLE COMMENTAIRE(
    ID INTEGER PRIMARY KEY ,
    CONTENU VARCHAR(220),
    DATE_PUBLICATION DATE,
    MESSAGE INTEGER REFERENCES MESSAGE_PAGE(ID),
    AUTEUR INTEGER REFERENCES MEMBRE(ID)
);

CREATE TABLE IMAGE(
    ID INTEGER PRIMARY KEY ,
    URL VARCHAR(220)
);

CREATE TABLE GALLERIE(
    ID INTEGER PRIMARY KEY
    IMAGE INTEGER REFERENCES IMAGE(ID)
);

CREATE TABLE GALLERIE_IMAGE(
    ID INTEGER PRIMARY KEY ,
    TITRE VARCHAR(200),
    IMAGE INTEGER REFERENCES IMAGE(ID)
);

ALTER TABLE PAGE ADD GALLERIE INTEGER REFERENCES GALLERIE(ID);

CREATE TABLE PHOTO(
    ID INTEGER PRIMARY KEY ,
    URL VARCHAR(220),
    MEMBRE INTEGER REFERENCES MEMBRE(ID)
);

CREATE TABLE ALBUM(
    ID INTEGER PRIMARY KEY ,
    TITRE VARCHAR(100)
);

ALTER TABLE PHOTO ADD ALBUM INTEGER REFERENCES ALBUM(ID);

CREATE TABLE RESTREINDRE_ALBUM(
    ID INTEGER PRIMARY KEY ,
    ALBUM INTEGER REFERENCES ALBUM(id),
    MEMBRE INTEGER REFERENCES MEMBRE(id)
);

CREATE TABLE RESTREINDRE_PHOTO(
    ID INTEGER PRIMARY KEY ,
    PHOTO INTEGER REFERENCES PHOTO(id),
    MEMBRE INTEGER REFERENCES MEMBRE(id)
);

CREATE TABLE BIBLIOTHEQUE(
    ID INTEGER PRIMARY KEY ,
    DATE_ENREGISTREMENT DATE,
    MEMBRE INTEGER REFERENCES MEMBRE(ID),
    PUBLICATION INTEGER REFERENCES MESSAGE_PAGE(ID)
);

CREATE TABLE RELATION_USER(
    ID INTEGER PRIMARY KEY ,
    STATUT INTEGER,
    SUGGESTION INTEGER,
    MEMBRE1 INTEGER REFERENCES MEMBRE(ID),
    MEMBRE2 INTEGER REFERENCES MEMBRE(ID)
);

CREATE TABLE IDENTIFIE(
    ID INTEGER PRIMARY KEY ,
    PHOTO INTEGER REFERENCES PHOTO(ID),
    MEMBRE INTEGER REFERENCES MEMBRE(ID)
);

ALTER TABLE LIKE_PAGE ADD DATE_LIKE DATE;