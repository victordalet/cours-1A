/*27-09*/	
	// instruction -> ordre simple
	// programme -> ensemble ordonnée d'instruction 
	// language de programation -> format lisse d'une présentation des instrction

	// famille de languages : -machine (processeur); -assembleur ; -évolués;
	// traduction évolué to machine  -> compilateur (traduit + enregistrer (en exécutable)) / interpréteur (traduit + exécuté)

	// Concépteur : Dennis Ritchie & Brian Kernighan
	// versions : 70-72 ; C K&R (78) -> standard ; C89/90 -> norme ; C99 -> performance ; C11 -> multithread

	// fonctionnement : fichier source (.c) -> compilation -> fichier objet (.obj) -> éditeur de liens [linker] -> fichier programme (.exe)

	// ereur :  compilation -> sytaxe ; linker -> conflit / problème de versions / manque de fichiers ; d'éxécution -> mauvais résultat

	// compilateurs : Visual C++ ; gcc ; clang (apple) ; Intel C++
	// IDE : Clion ; Xcode (mac) ; Eclipse (IBM) ; NetBeans (ORACLE) ; Codeblocks

	// bilblio base : stdio.h -> printf() ; scanf()  / stdlib.h -> rand() / time.h -> time() / math-> sin()


	/*exemple de programme d'addition*/




/*29-09*/
	// obfuscation -> technique informatique pour cacher les codes (ex : nom de variables ou fonction incropréhensible ; saut de ligne suprimer)

	// variables noms -> snake case : prix_article / camel case : prisArticle
	// signed -> + ou - ; unsigned -> +
	// short : 2oct ; int : 4oct ; long 4-8oct ; longlong 8oct ; 
	// % -> hd ; d ; ld ; lld ; hu ; u ; lu ; llu ; 
	// float : 4oct ; double : 8oct ;
	// preferer le double (%lf)
	// char (1oct) -> sert à stoquer un petit entier ; un symbole (utiliser '' ) ;
	// ascii : A->65 ; a-> 97 ; 0 -> 48  

	/*exercice simulateur de crédits*/